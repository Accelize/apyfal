/**
 * Accelize Accelerator WS
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse2001', 'model/InlineResponse200', 'model/InlineResponse200Results'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InlineResponse2001'), require('../model/InlineResponse200'), require('../model/InlineResponse200Results'));
  } else {
    // Browser globals (root is window)
    if (!root.AccelizeAcceleratorWs) {
      root.AccelizeAcceleratorWs = {};
    }
    root.AccelizeAcceleratorWs.ConfigurationApi = factory(root.AccelizeAcceleratorWs.ApiClient, root.AccelizeAcceleratorWs.InlineResponse2001, root.AccelizeAcceleratorWs.InlineResponse200, root.AccelizeAcceleratorWs.InlineResponse200Results);
  }
}(this, function(ApiClient, InlineResponse2001, InlineResponse200, InlineResponse200Results) {
  'use strict';

  /**
   * Configuration service.
   * @module accelize_accelerator/ConfigurationApi
   * @version 1.0
   */

  /**
   * Constructs a new ConfigurationApi. 
   * @alias module:accelize_accelerator/ConfigurationApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the configurationCreate operation.
     * @callback module:accelize_accelerator/ConfigurationApi~configurationCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /v1.0/configuration/
     * Create a new configuration instance and deploy it.
     * @param {Object} opts Optional parameters
     * @param {String} opts.parameters All parameters need for the excution in JSON format : {     \&quot;AcceleratorParam1\&quot;:\&quot;value1\&quot;,    \&quot;AcceleratorParam2\&quot;:\&quot;value2\&quot;,    \&quot;AcceleratorParam3\&quot;:\&quot;value3\&quot;}
     * @param {File} opts.datafile If needed, file to be processed by the accelerator.
     * @param {module:accelize_accelerator/ConfigurationApi~configurationCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    this.configurationCreate = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'parameters': opts['parameters'],
        'datafile': opts['datafile']
      };

      var authNames = [];
      var contentTypes = ['multipart/form-data'];
      var accepts = [];
      var returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1.0/configuration/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationList operation.
     * @callback module:accelize_accelerator/ConfigurationApi~configurationListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /v1.0/configuration/
     * Returns a list of all accelerator configuration instance requested in the system.
     * @param {Object} opts Optional parameters
     * @param {Integer} opts.page A page number within the paginated result set.
     * @param {module:accelize_accelerator/ConfigurationApi~configurationListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    this.configurationList = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/v1.0/configuration/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationRead operation.
     * @callback module:accelize_accelerator/ConfigurationApi~configurationReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200Results} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * /v1.0/configuration/{id}/
     * Return the given configuration instance.
     * @param {Integer} id A unique integer value identifying this accelerator config.
     * @param {module:accelize_accelerator/ConfigurationApi~configurationReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200Results}
     */
    this.configurationRead = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id == undefined || id == null) {
        throw "Missing the required parameter 'id' when calling configurationRead";
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = InlineResponse200Results;

      return this.apiClient.callApi(
        '/v1.0/configuration/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
