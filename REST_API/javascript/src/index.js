/**
 * Accelize Accelerator WS
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/InlineResponse2002Results', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse200Results', 'accelize_accelerator/ConfigurationApi', 'accelize_accelerator/ProcessApi', 'accelize_accelerator/SchemaApi', 'accelize_accelerator/StopApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/InlineResponse2002Results'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse200Results'), require('./accelize_accelerator/ConfigurationApi'), require('./accelize_accelerator/ProcessApi'), require('./accelize_accelerator/SchemaApi'), require('./accelize_accelerator/StopApi'));
  }
}(function(ApiClient, InlineResponse200, InlineResponse2001, InlineResponse2002, InlineResponse2002Results, InlineResponse2003, InlineResponse2004, InlineResponse200Results, ConfigurationApi, ProcessApi, SchemaApi, StopApi) {
  'use strict';

  /**
   * .<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AccelizeAcceleratorWs = require('index'); // See note below*.
   * var xxxSvc = new AccelizeAcceleratorWs.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AccelizeAcceleratorWs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AccelizeAcceleratorWs.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AccelizeAcceleratorWs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2002Results model constructor.
     * @property {module:model/InlineResponse2002Results}
     */
    InlineResponse2002Results: InlineResponse2002Results,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse200Results model constructor.
     * @property {module:model/InlineResponse200Results}
     */
    InlineResponse200Results: InlineResponse200Results,
    /**
     * The ConfigurationApi service constructor.
     * @property {module:accelize_accelerator/ConfigurationApi}
     */
    ConfigurationApi: ConfigurationApi,
    /**
     * The ProcessApi service constructor.
     * @property {module:accelize_accelerator/ProcessApi}
     */
    ProcessApi: ProcessApi,
    /**
     * The SchemaApi service constructor.
     * @property {module:accelize_accelerator/SchemaApi}
     */
    SchemaApi: SchemaApi,
    /**
     * The StopApi service constructor.
     * @property {module:accelize_accelerator/StopApi}
     */
    StopApi: StopApi
  };

  return exports;
}));
